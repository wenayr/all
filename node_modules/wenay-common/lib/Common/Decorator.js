"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enhancedDecorator = enhancedDecorator;
exports.enhancedTransformer = enhancedTransformer;
exports.Decorator = Decorator;
exports.TransformerResult = TransformerResult;
exports.Transformer = Transformer;
function enhancedDecorator(fn, opt) {
    return (...args) => {
        opt?.beforeParams?.(...args);
        const modifiedArgs = opt?.modifyParams?.(...args) || args;
        const rawResult = fn(...modifiedArgs);
        opt?.afterParams?.(...args);
        if (rawResult instanceof Promise) {
            const optAsync = opt;
            return rawResult
                .then((res) => opt?.modifyResult?.(optAsync?.onResult?.(res) || res) || res)
                .catch((err) => {
                optAsync?.onCatch?.(err);
                throw err;
            })
                .finally(() => optAsync?.onFinally?.());
        }
        else {
            opt?.onResult?.(rawResult);
            return opt?.modifyResult?.(rawResult) || rawResult;
        }
    };
}
function enhancedTransformer(fn, transform) {
    return (...args) => {
        const result = fn(...args);
        return transform([args, result]);
    };
}
function Decorator(fn, opt) {
    return enhancedDecorator(fn, {
        beforeParams: opt?.parameters,
        modifyParams: opt?.parametersModifier,
        afterParams: opt?.parametersAfter,
        onResult: opt?.result,
        modifyResult: opt?.resultModifier,
    });
}
function TransformerResult(fn, transform) {
    return enhancedTransformer(fn, transform);
}
function Transformer(fn, transform) {
    return (...args) => transform([args, fn]);
}
